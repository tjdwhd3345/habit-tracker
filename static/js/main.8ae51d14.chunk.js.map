{"version":3,"sources":["components/navbar.tsx","components/addform.tsx","components/habit.tsx","components/habits.tsx","components/reset.tsx","app.tsx","index.tsx"],"names":["Navbar","memo","totalCount","className","Addform","onAddHabit","inputRef","useRef","onSubmit","event","preventDefault","current","name","value","length","alert","ref","type","autoComplete","placeholder","Habit","habit","onIncrement","onDecrement","onDelete","count","onClick","Habits","habits","map","id","Reset","onReset","App","useState","setHabits","handleAddHabit","useCallback","habitName","some","toLowerCase","push","handleIncrement","item","handleDecrement","handleDelete","filter","handleReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAiBeA,EAXAC,gBAAK,YAAkC,IAA/BC,EAA8B,EAA9BA,WAErB,OACE,sBAAKC,UAAU,SAAf,UACE,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,eAAhB,SAAgCD,UCkCvBE,EAjCCH,gBAAK,YAAmC,IAAhCI,EAA+B,EAA/BA,WAChBC,EAAWC,iBAAyB,MAkB1C,OACE,uBAAMJ,UAAU,WAAWK,SAjBN,SAACC,GACtBA,EAAMC,iBAEN,IAAQC,EAAYL,EAAZK,QACR,GAAgB,OAAZA,EAAkB,CACpB,IAAMC,EAAOD,EAAQE,MACrB,GAAoB,IAAhBD,EAAKE,OAEP,YADAC,MAAM,qFAGRV,EAAWO,GAEXD,EAAQE,MAAQ,KAKlB,UACE,uBACEG,IAAKV,EACLH,UAAU,YACVc,KAAK,OACLC,aAAa,MACbC,YAAY,6DAEd,wBAAQhB,UAAU,aAAlB,uBCeSiB,EAhDDnB,gBAAK,YAAoE,IAAjEoB,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,SAqBrD,OACE,qBAAIrB,UAAU,QAAd,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,aAAhB,SAA8BkB,EAAMT,SAEtC,sBAAKT,UAAU,kBAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+BkB,EAAMI,QACrC,wBACEtB,UAAU,8BACVuB,QA5BgB,WAMtBJ,EAAYD,IAoBR,SAIE,mBAAGlB,UAAU,yBAEf,wBACEA,UAAU,8BACVuB,QAzBgB,WAGtBH,EAAYF,IAoBR,SAIE,mBAAGlB,UAAU,0BAEf,wBAAQA,UAAU,4BAA4BuB,QAvB/B,WACnBF,EAASH,IAsBL,SACE,mBAAGlB,UAAU,4BCfRwB,EArBA,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,OAAQN,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAElD,OACE,mCACE,oBAAIrB,UAAU,mBAAd,SACGyB,EAAOC,KAAI,SAACR,GACX,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPC,YAAaA,EACbC,YAAaA,EACbC,SAAUA,GAJLH,EAAMS,YCJVC,EAXD9B,gBAAK,YAA8B,IAA3B+B,EAA0B,EAA1BA,QAEpB,OACE,mCACE,wBAAQ7B,UAAU,eAAeuB,QAASM,EAA1C,4BC4GSC,EAzGH,WAEV,MAA4BC,mBAAuB,CACjD,CAAEJ,GAAI,SAAUlB,KAAM,UAAWa,MAAO,GACxC,CAAEK,GAAI,SAAUlB,KAAM,UAAWa,MAAO,GACxC,CAAEK,GAAI,SAAUlB,KAAM,SAAUa,MAAO,GACvC,CAAEK,GAAI,IAAKlB,KAAM,2BAAQa,MAAO,GAChC,CAAEK,GAAI,IAAKlB,KAAM,2BAAQa,MAAO,GAChC,CAAEK,GAAI,IAAKlB,KAAM,iCAASa,MAAO,GACjC,CAAEK,GAAI,IAAKlB,KAAM,2BAAQa,MAAO,GAChC,CAAEK,GAAI,IAAKlB,KAAM,eAAMa,MAAO,GAC9B,CAAEK,GAAI,IAAKlB,KAAM,2BAAQa,MAAO,GAChC,CAAEK,GAAI,KAAMlB,KAAM,2BAAQa,MAAO,GACjC,CAAEK,GAAI,KAAMlB,KAAM,iCAASa,MAAO,GAClC,CAAEK,GAAI,KAAMlB,KAAM,SAAKa,MAAO,GAC9B,CAAEK,GAAI,KAAMlB,KAAM,SAAKa,MAAO,KAbhC,mBAAOG,EAAP,KAAeO,EAAf,KAgBMC,EAAiBC,uBAAY,SAACC,GAERV,EAAOW,MAAK,SAAClB,GACrC,OAAOA,EAAMT,KAAK4B,gBAAkBF,EAAUE,iBAe9CzB,MAAM,gFAZNa,EAAOa,OACPN,GAAU,SAACP,GACT,MAAM,GAAN,mBACKA,GADL,CAEE,CACEE,GAAI,SAAWQ,EACf1B,KAAM0B,EACNb,MAAO,WAOd,CAACG,IAEEc,EAAkBL,uBAAY,SAAChB,GAEnCc,GAAU,SAACP,GACT,OAAOA,EAAOC,KAAI,SAACc,GACjB,OAAIA,EAAKb,KAAOT,EAAMS,GACb,2BAAKT,GAAZ,IAAmBI,MAAOkB,EAAKlB,MAAQ,IAElCkB,UAGV,IAEGC,EAAkBP,uBAAY,SAAChB,GAEnCc,GAAU,SAACP,GACT,OAAOA,EAAOC,KAAI,SAACc,GACjB,GAAIA,EAAKb,KAAOT,EAAMS,GAAI,CACxB,IAAML,EAAQJ,EAAMI,MAAQ,EAC5B,OAAO,2BACFJ,GADL,IAEEI,MAAOA,EAAQ,EAAI,EAAIA,IAI3B,OAAOkB,UAGV,IAEGE,EAAeR,uBAAY,SAAChB,GAChCc,GAAU,SAACP,GACT,OAAOA,EAAOkB,QAAO,SAACH,GACpB,OAAOA,EAAKb,KAAOT,EAAMS,WAG5B,IAEGiB,EAAcV,uBAAY,WAC9BF,GAAU,SAACP,GACT,OAAOA,EAAOC,KAAI,SAACR,GACjB,OAAoB,IAAhBA,EAAMI,MACD,2BAAKJ,GAAZ,IAAmBI,MAAO,IAErBJ,UAGV,IAEH,OACE,qCACE,cAAC,EAAD,CACEnB,WAAY0B,EAAOkB,QAAO,SAACH,GAAD,OAAUA,EAAKlB,MAAQ,KAAGX,SAEtD,cAAC,EAAD,CAAST,WAAY+B,IACrB,cAAC,EAAD,CACER,OAAQA,EACRN,YAAaoB,EACbnB,YAAaqB,EACbpB,SAAUqB,IAEZ,cAAC,EAAD,CAAOb,QAASe,Q,MCxGtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.8ae51d14.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\n\r\ninterface NavbarProps {\r\n  totalCount: number\r\n}\r\n\r\nconst Navbar = memo(({ totalCount }: NavbarProps) => {\r\n  // console.log('navbar.jsx');\r\n  return (\r\n    <nav className='navbar'>\r\n      <i className='fas fa-leaf navbar-logo'></i>\r\n      <span>Habit Tracker</span>\r\n      <span className='navbar-count'>{totalCount}</span>\r\n    </nav>\r\n  );\r\n});\r\n\r\nexport default Navbar;\r\n","import React, { memo, useRef } from 'react';\r\n\r\n/*\r\n function addform(props) {\r\n\r\n }\r\n function 컴포넌트에서는 함수형 scope 으로 사용하기 때문에 this 를 쓰지 않는다.\r\n memo 는 function 컴포넌트에서 사용하는 PureCompoenent 같은 것.\r\n */\r\ninterface AddFormProps {\r\n  onAddHabit: (habitName: string) => void\r\n}\r\n\r\nconst Addform = memo(({ onAddHabit }: AddFormProps) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleAddHabit = (event: { preventDefault: () => void; }) => {\r\n    event.preventDefault();\r\n    // console.log(this.inputRef.current.value);\r\n    const { current } = inputRef;\r\n    if (current !== null) {\r\n      const name = current.value;\r\n      if (name.length === 0) {\r\n        alert('습관을 한글자 이상 입력하세요');\r\n        return;\r\n      }\r\n      onAddHabit(name);\r\n      // this.current.reset();\r\n      current.value = '';\r\n      // console.log('addform.jsx');\r\n    }\r\n  };\r\n  return (\r\n    <form className='add-form' onSubmit={handleAddHabit}>\r\n      <input\r\n        ref={inputRef}\r\n        className='add-input'\r\n        type='text'\r\n        autoComplete='off'\r\n        placeholder='습관을 입력해주세요.'\r\n      />\r\n      <button className='add-button'>Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default Addform;\r\n","import React, { memo } from 'react';\r\nimport { HabitProps } from '../app'\r\nimport { HabitsCompFuncProps } from './habits'\r\n\r\ninterface HabitCompProps extends HabitsCompFuncProps{\r\n  habit: HabitProps\r\n}\r\n\r\nconst Habit = memo(({ habit, onIncrement, onDecrement, onDelete }: HabitCompProps) => {\r\n  // console.log('habit.jsx');\r\n  const handleIncrement = () => {\r\n    //   //console.log('increaseCount: ', event);\r\n    //   //이런식으로 직접 state 변수를 set 만 하면 리액트가 변화를 감지하지 못함.\r\n    //   //state.count += 1;\r\n    //   //setState 메소드를 사용하자\r\n    //   setState({ count: state.count + 1 });\r\n    onIncrement(habit);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    //   const count = state.count - 1;\r\n    //   setState({ count: count < 0 ? 0 : count });\r\n    onDecrement(habit);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onDelete(habit);\r\n  };\r\n\r\n  return (\r\n    <li className='habit'>\r\n      <div className='habit-name-wrap'>\r\n        <span className='habit-name'>{habit.name}</span>\r\n      </div>\r\n      <div className='habit-icon-wrap'>\r\n        <span className='habit-count'>{habit.count}</span>\r\n        <button\r\n          className='habit-button habit-increase'\r\n          onClick={handleIncrement}\r\n        >\r\n          <i className='fas fa-plus-square'></i>\r\n        </button>\r\n        <button\r\n          className='habit-button habit-decrease'\r\n          onClick={handleDecrement}\r\n        >\r\n          <i className='fas fa-minus-square'></i>\r\n        </button>\r\n        <button className='habit-button habit-delete' onClick={handleDelete}>\r\n          <i className='fas fa-trash'></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default Habit;\r\n","import React from 'react';\r\nimport Habit from './habit';\r\nimport { HabitProps } from '../app'\r\n\r\nexport interface HabitsCompFuncProps {\r\n  onIncrement: (habit: HabitProps) => void\r\n  onDecrement: (habit: HabitProps) => void\r\n  onDelete: (habit: HabitProps) => void\r\n}\r\ninterface HabitsCompProps extends HabitsCompFuncProps{ \r\n  habits: HabitProps[]\r\n}\r\n\r\nconst Habits = ({ habits, onIncrement, onDecrement, onDelete }: HabitsCompProps) => {\r\n  // console.log('habits.jsx');\r\n  return (\r\n    <>\r\n      <ul className='habits no-scroll'>\r\n        {habits.map((habit: HabitProps) => {\r\n          return (\r\n            <Habit\r\n              key={habit.id}\r\n              habit={habit}\r\n              onIncrement={onIncrement}\r\n              onDecrement={onDecrement}\r\n              onDelete={onDelete}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Habits;\r\n","import React, { memo } from 'react';\r\n\r\ninterface ResetProps {\r\n  onReset: () => void\r\n}\r\n\r\nconst Reset = memo(({ onReset }: ResetProps) => {\r\n  // console.log('reset.jsx');\r\n  return (\r\n    <>\r\n      <button className='habits-reset' onClick={onReset}>\r\n        Reset All\r\n      </button>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Reset;\r\n","import React, { useCallback, useState } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/navbar';\r\nimport Addform from './components/addform';\r\nimport Habits from './components/habits';\r\nimport Reset from './components/reset';\r\n\r\nexport interface HabitProps {\r\n  id: string,\r\n  name: string,\r\n  count: number\r\n}\r\n\r\nconst App = () => {\r\n  // console.log('app.jsx render');\r\n  const [habits, setHabits] = useState<HabitProps[]>([\r\n    { id: 'habit1', name: 'Reading', count: 0 },\r\n    { id: 'habit2', name: 'Running', count: 0 },\r\n    { id: 'habit3', name: 'Coding', count: 0 },\r\n    { id: '4', name: '물마시기', count: 0 },\r\n    { id: '5', name: '술마시기', count: 0 },\r\n    { id: '6', name: '커피마시기', count: 0 },\r\n    { id: '7', name: '산책하기', count: 0 },\r\n    { id: '8', name: '걷기', count: 0 },\r\n    { id: '9', name: '전화하기', count: 0 },\r\n    { id: '10', name: '노래듣기', count: 0 },\r\n    { id: '11', name: '노래부르기', count: 0 },\r\n    { id: '12', name: '가', count: 0 },\r\n    { id: '13', name: '나', count: 0 },\r\n  ]);\r\n\r\n  const handleAddHabit = useCallback((habitName: string) => {\r\n    // console.log('handleAddHabit', habitName);\r\n    const hasHabit: boolean = habits.some((habit: HabitProps) => {\r\n      return habit.name.toLowerCase() === habitName.toLowerCase();\r\n    });\r\n    if (!hasHabit) {\r\n      habits.push();\r\n      setHabits((habits) => {\r\n        return [\r\n          ...habits,\r\n          {\r\n            id: 'habit_' + habitName,\r\n            name: habitName,\r\n            count: 0,\r\n          },\r\n        ];\r\n      });\r\n    } else {\r\n      alert('같음 이름의 습관이 있습니다');\r\n    }\r\n  }, [habits]);\r\n\r\n  const handleIncrement = useCallback((habit: HabitProps) => {\r\n    // console.log('habits.jsx handleIncrement', habit);\r\n    setHabits((habits) => {\r\n      return habits.map((item: HabitProps) => {\r\n        if (item.id === habit.id) {\r\n          return { ...habit, count: item.count + 1 };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleDecrement = useCallback((habit: HabitProps) => {\r\n    // console.log('habits.jsx handleDecrement', habit);\r\n    setHabits((habits) => {\r\n      return habits.map((item: HabitProps) => {\r\n        if (item.id === habit.id) {\r\n          const count = habit.count - 1;\r\n          return {\r\n            ...habit,\r\n            count: count < 0 ? 0 : count,\r\n            /* count: (--item.count, item.count < 0 ? 0 : item.count), */\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleDelete = useCallback((habit: HabitProps) => {\r\n    setHabits((habits) => {\r\n      return habits.filter((item: HabitProps) => {\r\n        return item.id !== habit.id;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleReset = useCallback(() => {\r\n    setHabits((habits) => {\r\n      return habits.map((habit: HabitProps) => {\r\n        if (habit.count !== 0) {\r\n          return { ...habit, count: 0 };\r\n        }\r\n        return habit;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        totalCount={habits.filter((item) => item.count > 0).length}\r\n      />\r\n      <Addform onAddHabit={handleAddHabit} />\r\n      <Habits\r\n        habits={habits}\r\n        onIncrement={handleIncrement}\r\n        onDecrement={handleDecrement}\r\n        onDelete={handleDelete}\r\n      />\r\n      <Reset onReset={handleReset}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\nimport SimpleHabit from './components/simpleHabit';\r\n\r\n// console.log('index.js');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <SimpleHabit /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}