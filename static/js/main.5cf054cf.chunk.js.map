{"version":3,"sources":["components/navbar.jsx","components/habit.jsx","components/addform.jsx","components/habits.jsx","components/reset.jsx","app.jsx","index.js"],"names":["Navbar","memo","totalCount","className","Habit","habit","onIncrement","onDecrement","onDelete","name","count","onClick","Addform","props","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","length","onAddHabit","alert","ref","type","autoComplete","placeholder","Habits","habits","map","id","Reset","onReset","App","useState","setHabits","handleAddHabit","useCallback","habitName","some","toLowerCase","push","handleIncrement","item","handleDecrement","handleDelete","filter","handleReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAaeA,EAXAC,gBAAK,YAAqB,IAAlBC,EAAiB,EAAjBA,WAErB,OACE,sBAAKC,UAAU,SAAf,UACE,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,eAAhB,SAAgCD,UC0CvBE,EAhDDH,gBAAK,YAAoD,IAAjDI,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAqBrD,OACE,qBAAIL,UAAU,QAAd,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,aAAhB,SAA8BE,EAAMI,SAEtC,sBAAKN,UAAU,kBAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+BE,EAAMK,QACrC,wBACEP,UAAU,8BACVQ,QA5BgB,WAMtBL,EAAYD,IAoBR,SAIE,mBAAGF,UAAU,yBAEf,wBACEA,UAAU,8BACVQ,QAzBgB,WAGtBJ,EAAYF,IAoBR,SAIE,mBAAGF,UAAU,0BAEf,wBAAQA,UAAU,4BAA4BQ,QAvB/B,WACnBH,EAASH,IAsBL,SACE,mBAAGF,UAAU,4BCHRS,EA9BCX,gBAAK,SAACY,GACpB,IAAMC,EAAWC,IAAMC,YAevB,OACE,uBAAMb,UAAU,WAAWc,SAdN,SAACC,GACtBA,EAAMC,iBAEN,IAAMV,EAAOK,EAASM,QAAQC,MACV,IAAhBZ,EAAKa,QAITT,EAAMU,WAAWd,GAEjBK,EAASM,QAAQC,MAAQ,IALvBG,MAAM,sFASR,UACE,uBACEC,IAAKX,EACLX,UAAU,YACVuB,KAAK,OACLC,aAAa,MACbC,YAAY,6DAEd,wBAAQzB,UAAU,aAAlB,uBCTS0B,EAtBA,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,OAAQP,EAAqD,EAArDA,WAAYjB,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAE9D,OACE,qCACE,cAAC,EAAD,CAASe,WAAYA,IACrB,oBAAIpB,UAAU,mBAAd,SACG2B,EAAOC,KAAI,SAAC1B,GACX,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPC,YAAaA,EACbC,YAAaA,EACbC,SAAUA,GAJLH,EAAM2B,aCAVC,EAXDhC,gBAAK,YAAkB,IAAfiC,EAAc,EAAdA,QAEpB,OACE,mCACE,wBAAQ/B,UAAU,eAAeQ,QAASuB,EAA1C,4BCyGSC,EAzGH,WAEV,MAA4BC,mBAAS,CACnC,CAAEJ,GAAI,SAAUvB,KAAM,UAAWC,MAAO,GACxC,CAAEsB,GAAI,SAAUvB,KAAM,UAAWC,MAAO,GACxC,CAAEsB,GAAI,SAAUvB,KAAM,SAAUC,MAAO,GACvC,CAAEsB,GAAI,IAAKvB,KAAM,2BAAQC,MAAO,GAChC,CAAEsB,GAAI,IAAKvB,KAAM,2BAAQC,MAAO,GAChC,CAAEsB,GAAI,IAAKvB,KAAM,iCAASC,MAAO,GACjC,CAAEsB,GAAI,IAAKvB,KAAM,2BAAQC,MAAO,GAChC,CAAEsB,GAAI,IAAKvB,KAAM,eAAMC,MAAO,GAC9B,CAAEsB,GAAI,IAAKvB,KAAM,2BAAQC,MAAO,GAChC,CAAEsB,GAAI,KAAMvB,KAAM,2BAAQC,MAAO,GACjC,CAAEsB,GAAI,KAAMvB,KAAM,iCAASC,MAAO,GAClC,CAAEsB,GAAI,KAAMvB,KAAM,SAAKC,MAAO,GAC9B,CAAEsB,GAAI,KAAMvB,KAAM,SAAKC,MAAO,KAbhC,mBAAOoB,EAAP,KAAeO,EAAf,KAgBMC,EAAiBC,uBAAY,SAACC,GAEjBV,EAAOW,MAAK,SAACpC,GAC5B,OAAOA,EAAMI,KAAKiC,gBAAkBF,EAAUE,iBAe9ClB,MAAM,gFAZNM,EAAOa,OACPN,GAAU,SAACP,GACT,MAAM,GAAN,mBACKA,GADL,CAEE,CACEE,GAAI,SAAWQ,EACf/B,KAAM+B,EACN9B,MAAO,WAOd,IAEGkC,EAAkBL,uBAAY,SAAClC,GAEnCgC,GAAU,SAACP,GACT,OAAOA,EAAOC,KAAI,SAACc,GACjB,OAAIA,EAAKb,KAAO3B,EAAM2B,GACb,2BAAK3B,GAAZ,IAAmBK,MAAOmC,EAAKnC,MAAQ,IAElCmC,UAGV,IAEGC,EAAkBP,uBAAY,SAAClC,GAEnCgC,GAAU,SAACP,GACT,OAAOA,EAAOC,KAAI,SAACc,GACjB,GAAIA,EAAKb,KAAO3B,EAAM2B,GAAI,CACxB,IAAMtB,EAAQL,EAAMK,MAAQ,EAC5B,OAAO,2BACFL,GADL,IAEEK,MAAOA,EAAQ,EAAI,EAAIA,IAI3B,OAAOmC,UAGV,IAEGE,EAAeR,uBAAY,SAAClC,GAChCgC,GAAU,SAACP,GACT,OAAOA,EAAOkB,QAAO,SAACH,GACpB,OAAOA,EAAKb,KAAO3B,EAAM2B,WAG5B,IAEGiB,EAAcV,uBAAY,WAC9BF,GAAU,SAACP,GACT,OAAOA,EAAOC,KAAI,SAAC1B,GACjB,OAAoB,IAAhBA,EAAMK,MACD,2BAAKL,GAAZ,IAAmBK,MAAO,IAErBL,UAGV,IAEH,OACE,qCACE,cAAC,EAAD,CACEH,WAAY4B,EAAOkB,QAAO,SAACH,GAAD,OAAUA,EAAKnC,MAAQ,KAAGY,SAEtD,cAAC,EAAD,CACEQ,OAAQA,EACRxB,YAAasC,EACbrC,YAAauC,EACbtC,SAAUuC,EACVxB,WAAYe,IAEd,cAAC,EAAD,CAAOJ,QAASe,Q,MCjGtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.5cf054cf.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\n\r\nconst Navbar = memo(({ totalCount }) => {\r\n  // console.log('navbar.jsx');\r\n  return (\r\n    <nav className='navbar'>\r\n      <i className='fas fa-leaf navbar-logo'></i>\r\n      <span>Habit Tracker</span>\r\n      <span className='navbar-count'>{totalCount}</span>\r\n    </nav>\r\n  );\r\n});\r\n\r\nexport default Navbar;\r\n","import React, { memo } from 'react';\r\n\r\nconst Habit = memo(({ habit, onIncrement, onDecrement, onDelete }) => {\r\n  // console.log('habit.jsx');\r\n  const handleIncrement = () => {\r\n    //   //console.log('increaseCount: ', event);\r\n    //   //이런식으로 직접 state 변수를 set 만 하면 리액트가 변화를 감지하지 못함.\r\n    //   //state.count += 1;\r\n    //   //setState 메소드를 사용하자\r\n    //   setState({ count: state.count + 1 });\r\n    onIncrement(habit);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    //   const count = state.count - 1;\r\n    //   setState({ count: count < 0 ? 0 : count });\r\n    onDecrement(habit);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onDelete(habit);\r\n  };\r\n\r\n  return (\r\n    <li className='habit'>\r\n      <div className='habit-name-wrap'>\r\n        <span className='habit-name'>{habit.name}</span>\r\n      </div>\r\n      <div className='habit-icon-wrap'>\r\n        <span className='habit-count'>{habit.count}</span>\r\n        <button\r\n          className='habit-button habit-increase'\r\n          onClick={handleIncrement}\r\n        >\r\n          <i className='fas fa-plus-square'></i>\r\n        </button>\r\n        <button\r\n          className='habit-button habit-decrease'\r\n          onClick={handleDecrement}\r\n        >\r\n          <i className='fas fa-minus-square'></i>\r\n        </button>\r\n        <button className='habit-button habit-delete' onClick={handleDelete}>\r\n          <i className='fas fa-trash'></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default Habit;\r\n","import React, { memo } from 'react';\r\n\r\n/*\r\n function addform(props) {\r\n\r\n }\r\n function 컴포넌트에서는 함수형 scope 으로 사용하기 때문에 this 를 쓰지 않는다.\r\n memo 는 function 컴포넌트에서 사용하는 PureCompoenent 같은 것.\r\n */\r\n\r\nconst Addform = memo((props) => {\r\n  const inputRef = React.createRef(); // React 16.3^\r\n\r\n  const handleAddHabit = (event) => {\r\n    event.preventDefault();\r\n    // console.log(this.inputRef.current.value);\r\n    const name = inputRef.current.value;\r\n    if (name.length === 0) {\r\n      alert('습관을 한글자 이상 입력하세요');\r\n      return;\r\n    }\r\n    props.onAddHabit(name);\r\n    // this.inputRef.current.reset();\r\n    inputRef.current.value = '';\r\n    // console.log('addform.jsx');\r\n  };\r\n  return (\r\n    <form className='add-form' onSubmit={handleAddHabit}>\r\n      <input\r\n        ref={inputRef}\r\n        className='add-input'\r\n        type='text'\r\n        autoComplete='off'\r\n        placeholder='습관을 입력해주세요.'\r\n      />\r\n      <button className='add-button'>Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default Addform;\r\n","import React from 'react';\r\nimport Habit from './habit';\r\nimport Addform from './addform';\r\n\r\nconst Habits = ({ habits, onAddHabit, onIncrement, onDecrement, onDelete }) => {\r\n  // console.log('habits.jsx');\r\n  return (\r\n    <>\r\n      <Addform onAddHabit={onAddHabit}></Addform>\r\n      <ul className='habits no-scroll'>\r\n        {habits.map((habit) => {\r\n          return (\r\n            <Habit\r\n              key={habit.id}\r\n              habit={habit}\r\n              onIncrement={onIncrement}\r\n              onDecrement={onDecrement}\r\n              onDelete={onDelete}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Habits;\r\n","import React, { memo } from 'react';\r\n\r\nconst Reset = memo(({ onReset }) => {\r\n  // console.log('reset.jsx');\r\n  return (\r\n    <>\r\n      <button className='habits-reset' onClick={onReset}>\r\n        Reset All\r\n      </button>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Reset;\r\n","import React, { useCallback, useState } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/navbar';\r\nimport Habits from './components/habits';\r\nimport Reset from './components/reset';\r\n\r\nconst App = () => {\r\n  // console.log('app.jsx render');\r\n  const [habits, setHabits] = useState([\r\n    { id: 'habit1', name: 'Reading', count: 0 },\r\n    { id: 'habit2', name: 'Running', count: 0 },\r\n    { id: 'habit3', name: 'Coding', count: 0 },\r\n    { id: '4', name: '물마시기', count: 0 },\r\n    { id: '5', name: '술마시기', count: 0 },\r\n    { id: '6', name: '커피마시기', count: 0 },\r\n    { id: '7', name: '산책하기', count: 0 },\r\n    { id: '8', name: '걷기', count: 0 },\r\n    { id: '9', name: '전화하기', count: 0 },\r\n    { id: '10', name: '노래듣기', count: 0 },\r\n    { id: '11', name: '노래부르기', count: 0 },\r\n    { id: '12', name: '가', count: 0 },\r\n    { id: '13', name: '나', count: 0 },\r\n  ]);\r\n\r\n  const handleAddHabit = useCallback((habitName) => {\r\n    // console.log('handleAddHabit', habitName);\r\n    const hasHabit = habits.some((habit) => {\r\n      return habit.name.toLowerCase() === habitName.toLowerCase();\r\n    });\r\n    if (!hasHabit) {\r\n      habits.push();\r\n      setHabits((habits) => {\r\n        return [\r\n          ...habits,\r\n          {\r\n            id: 'habit_' + habitName,\r\n            name: habitName,\r\n            count: 0,\r\n          },\r\n        ];\r\n      });\r\n    } else {\r\n      alert('같음 이름의 습관이 있습니다');\r\n    }\r\n  }, []);\r\n\r\n  const handleIncrement = useCallback((habit) => {\r\n    // console.log('habits.jsx handleIncrement', habit);\r\n    setHabits((habits) => {\r\n      return habits.map((item) => {\r\n        if (item.id === habit.id) {\r\n          return { ...habit, count: item.count + 1 };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleDecrement = useCallback((habit) => {\r\n    // console.log('habits.jsx handleDecrement', habit);\r\n    setHabits((habits) => {\r\n      return habits.map((item) => {\r\n        if (item.id === habit.id) {\r\n          const count = habit.count - 1;\r\n          return {\r\n            ...habit,\r\n            count: count < 0 ? 0 : count,\r\n            /* count: (--item.count, item.count < 0 ? 0 : item.count), */\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleDelete = useCallback((habit) => {\r\n    setHabits((habits) => {\r\n      return habits.filter((item) => {\r\n        return item.id !== habit.id;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleReset = useCallback(() => {\r\n    setHabits((habits) => {\r\n      return habits.map((habit) => {\r\n        if (habit.count !== 0) {\r\n          return { ...habit, count: 0 };\r\n        }\r\n        return habit;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        totalCount={habits.filter((item) => item.count > 0).length}\r\n      ></Navbar>\r\n      <Habits\r\n        habits={habits}\r\n        onIncrement={handleIncrement}\r\n        onDecrement={handleDecrement}\r\n        onDelete={handleDelete}\r\n        onAddHabit={handleAddHabit}\r\n      ></Habits>\r\n      <Reset onReset={handleReset}></Reset>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\nimport SimpleHabit from './components/simpleHabit';\r\n\r\n// console.log('index.js');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <SimpleHabit /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}