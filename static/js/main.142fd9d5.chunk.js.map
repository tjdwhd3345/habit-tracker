{"version":3,"sources":["components/navbar.jsx","components/habit.jsx","components/addform.jsx","components/habits.jsx","components/reset.jsx","app.jsx","index.js"],"names":["Navbar","memo","totalCount","console","log","className","Habit","habit","onIncrement","onDecrement","onDelete","name","count","onClick","Addform","props","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","length","onAddHabit","alert","ref","type","autoComplete","placeholder","Habits","habits","map","id","Reset","onReset","App","useState","setHabits","handleAddHabit","useCallback","habitName","some","toLowerCase","push","handleIncrement","item","handleDecrement","handleDelete","filter","handleReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.142fd9d5.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nconst Navbar = memo(({ totalCount }) => {\n  console.log('navbar.jsx');\n  return (\n    <nav className=\"navbar\">\n      <i className=\"fas fa-leaf navbar-logo\"></i>\n      <span>Habit Tracker</span>\n      <span className=\"navbar-count\">{totalCount}</span>\n    </nav>\n  );\n});\n\nexport default Navbar;\n","import React, { memo } from 'react';\n\nconst Habit = memo(({ habit, onIncrement, onDecrement, onDelete }) => {\n  console.log('habit.jsx');\n  const handleIncrement = () => {\n    //   //console.log('increaseCount: ', event);\n    //   //이런식으로 직접 state 변수를 set 만 하면 리액트가 변화를 감지하지 못함.\n    //   //state.count += 1;\n    //   //setState 메소드를 사용하자\n    //   setState({ count: state.count + 1 });\n    onIncrement(habit);\n  };\n\n  const handleDecrement = () => {\n    //   const count = state.count - 1;\n    //   setState({ count: count < 0 ? 0 : count });\n    onDecrement(habit);\n  };\n\n  const handleDelete = () => {\n    onDelete(habit);\n  };\n\n  return (\n    <li className=\"habit\">\n      <span className=\"habit-name\">{habit.name}</span>\n      <span className=\"habit-count\">{habit.count}</span>\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <button className=\"habit-button habit-decrease\" onClick={handleDecrement}>\n        <i className=\"fas fa-minus-square\"></i>\n      </button>\n      <button className=\"habit-button habit-delete\" onClick={handleDelete}>\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n});\n\nexport default Habit;\n","import React, { memo } from 'react';\n\n/*\n function addform(props) {\n\n }\n function 컴포넌트에서는 함수형 scope 으로 사용하기 때문에 this 를 쓰지 않는다.\n memo 는 function 컴포넌트에서 사용하는 PureCompoenent 같은 것.\n */\n\nconst Addform = memo((props) => {\n  const inputRef = React.createRef(); // React 16.3^\n\n  const handleAddHabit = (event) => {\n    event.preventDefault();\n    // console.log(this.inputRef.current.value);\n    const name = inputRef.current.value;\n    if (name.length === 0) {\n      alert('습관을 한글자 이상 입력하시오');\n      return;\n    }\n    props.onAddHabit(name);\n    // this.inputRef.current.reset();\n    inputRef.current.value = '';\n    console.log('addform.jsx');\n  };\n  return (\n    <form className=\"add-form\" onSubmit={handleAddHabit}>\n      <input\n        ref={inputRef}\n        className=\"add-input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"습관을 입력하시오.\"\n      />\n      <button className=\"add-button\">Add</button>\n    </form>\n  );\n});\n\nexport default Addform;\n","import React from 'react';\nimport Habit from './habit';\nimport Addform from './addform';\n\nconst Habits = ({ habits, onAddHabit, onIncrement, onDecrement, onDelete }) => {\n  console.log('habits.jsx');\n  return (\n    <>\n      <Addform onAddHabit={onAddHabit}></Addform>\n      <ul>\n        {habits.map((habit) => {\n          return (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={onIncrement}\n              onDecrement={onDecrement}\n              onDelete={onDelete}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Habits;\n","import React, { memo } from 'react';\n\nconst Reset = memo(({ onReset }) => {\n  console.log('reset.jsx');\n  return (\n    <>\n      <button className=\"habits-reset\" onClick={onReset}>\n        Reset All\n      </button>\n    </>\n  );\n});\n\nexport default Reset;\n","import React, { useCallback, useState } from 'react';\nimport './app.css';\nimport Navbar from './components/navbar';\nimport Habits from './components/habits';\nimport Reset from './components/reset';\n\nconst App = () => {\n  console.log('app.jsx render');\n  const [habits, setHabits] = useState([\n    { id: 'habit1', name: 'Reading', count: 0 },\n    { id: 'habit2', name: 'Running', count: 0 },\n    { id: 'habit3', name: 'Coding', count: 0 },\n  ]);\n\n  const handleAddHabit = useCallback((habitName) => {\n    console.log('handleAddHabit', habitName);\n    const hasHabit = habits.some((habit) => {\n      return habit.name.toLowerCase() === habitName.toLowerCase();\n    });\n    if (!hasHabit) {\n      habits.push();\n      setHabits((habits) => {\n        return [\n          ...habits,\n          {\n            id: 'habit_' + habitName,\n            name: habitName,\n            count: 0,\n          },\n        ];\n      });\n    } else {\n      alert('이미 있는 Habit임.');\n    }\n  }, []);\n\n  const handleIncrement = useCallback((habit) => {\n    // console.log('habits.jsx handleIncrement', habit);\n    setHabits((habits) => {\n      return habits.map((item) => {\n        if (item.id === habit.id) {\n          return { ...habit, count: item.count + 1 };\n        }\n        return item;\n      });\n    });\n  }, []);\n\n  const handleDecrement = useCallback((habit) => {\n    console.log('habits.jsx handleDecrement', habit);\n    setHabits((habits) => {\n      return habits.map((item) => {\n        if (item.id === habit.id) {\n          const count = habit.count - 1;\n          return {\n            ...habit,\n            count: count < 0 ? 0 : count,\n            /* count: (--item.count, item.count < 0 ? 0 : item.count), */\n          };\n        }\n        return item;\n      });\n    });\n  }, []);\n\n  const handleDelete = useCallback((habit) => {\n    setHabits((habits) => {\n      return habits.filter((item) => {\n        return item.id !== habit.id;\n      });\n    });\n  }, []);\n\n  const handleReset = useCallback(() => {\n    setHabits((habits) => {\n      return habits.map((habit) => {\n        if (habit.count !== 0) {\n          return { ...habit, count: 0 };\n        }\n        return habit;\n      });\n    });\n  }, []);\n\n  return (\n    <>\n      <Navbar\n        totalCount={habits.filter((item) => item.count > 0).length}\n      ></Navbar>\n      <Habits\n        habits={habits}\n        onIncrement={handleIncrement}\n        onDecrement={handleDecrement}\n        onDelete={handleDelete}\n        onAddHabit={handleAddHabit}\n      ></Habits>\n      <Reset onReset={handleReset}></Reset>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nconsole.log('index.js');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <SimpleHabit /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}